name: phalcon
version: 1.2.7
inherits: wercker/ubuntu12.04-webessentials@0.0.3
type: main
platform: ubuntu@12.04
no-response-timeout: 199
description: wercker box for phalcon
keywords:
  - php
  - php55
  - mysql
  - phalcon
  - phpunit
  - codeception
  - ruby
  - sass
  - compass
packages:
  - php@5.5
  - composer
  - phalcon
  - phpunit
  - codeception
  - ruby
  - sass
  - compass
script: |
    # Add eports to profile, rc didn't work
    echo 'export PATH="/usr/local/bin:$PATH"' >> $HOME/.bash_profile 

    sudo add-apt-repository ppa:ondrej/php5 -y
    sudo apt-get update -y
    sudo apt-key update


    # Needed to build PHP with php-build
    sudo apt-get install -y curl wget unzip ack-grep git
    sudo apt-get build-dep php5-cli
    sudo apt-get install libreadline-dev
    sudo apt-get install re2c
    sudo apt-get install flex
    sudo apt-get install bison
    
    #Install php-build
    git clone https://github.com/CHH/php-build.git
    sudo ./php-build/install.sh
    rm -rf ./php-build
    sudo chown -R ubuntu $HOME
    sudo chown -R ubuntu /usr/local/share/php-build
    export PHP_BUILD_CONFIGURE_OPTS="--with-bz2 --enable-intl --enable-calendar"
    export PHP_BUILD_VERSIONS_DIR="$HOME/.phpenv/versions"

    # Validate php-build
    php-build --version


    # Intall php-env
    git clone https://github.com/CHH/phpenv.git
    sudo ./phpenv/bin/phpenv-install.sh
    echo 'export PATH="/home/ubuntu/.phpenv/shims:/home/ubuntu/.phpenv/bin:$PATH"' >> $HOME/.bash_profile
    echo 'eval "$(phpenv init -)"' >> $HOME/.bash_profile
    # Install extensions
    sudo cp ./phpenv/extensions/rbenv-config-add /home/ubuntu/.phpenv/libexec
    sudo cp ./phpenv/extensions/rbenv-config-rm /home/ubuntu/.phpenv/libexec
    rm -rf ./phpenv
    sudo chown -R ubuntu $HOME
    source $HOME/.bash_profile

    # Validate phpenv
    phpenv --version
    # Build PHP versions
    ###################
    ## PHP 5.3
    ###################
    cp patch-intl-5.3.sh /usr/local/share/php-build/before-install.d/
    chmod +x /usr/local/share/php-build/before-install.d/patch-intl-5.3.sh
    php-build -i development --pear 5.3.28 $HOME/.phpenv/versions/5.3 --verbose
    rm /usr/local/share/php-build/before-install.d/patch-intl-5.3.sh
    export PHPINI=/home/ubuntu/.phpenv/versions/5.3/etc/php.ini
    sed -i 's/128M/8096M/' $PHPINI

    # Setup environment
    phpenv rehash
    phpenv global 5.3
    phpenv rehash
    prefix=$(phpenv prefix)
    # list php version environment
    ls $prefix
    ls $prefix/pear
    # echo the current path
    echo $PATH
    # Download composer
    curl -sS https://getcomposer.org/installer | php
    sudo chmod +x ./composer.phar
    ./composer.phar selfupdate
    # Install composer
    sudo cp composer.phar $prefix/bin/composer
    sudo chmod +x $prefix/bin/composer
    # Install DBunit and DBunit
    wget https://phar.phpunit.de/phpunit.phar
    chmod +x phpunit.phar
    sudo cp phpunit.phar $prefix/bin/phpunit

    # Install atoum
    wget http://downloads.atoum.org/nightly/mageekguy.atoum.phar
    chmod +x mageekguy.atoum.phar
    sudo mv mageekguy.atoum.phar $prefix/bin/atoum
    sudo chmod +x $prefix/bin/atoum
    
    #install phalcon
    git clone --depth=1 git://github.com/phalcon/cphalcon.git
    cd cphalcon/ext;
    export CFLAGS="-g3 -O1 -fno-delete-null-pointer-checks -Wall";
    phpize && ./configure --enable-phalcon && make -j4 && sudo make install
    #cd cphalcon/build
    #sudo ./install
  
    # Configure PHP
    sudo sed -i 's+;date.timezone =+date.timezone = Europe/Rome +g'  $PHPINI

    sudo sed -i 's/disable_functions/;disable_functions/' $PHPINI
  
    #sudo sh -c "echo 'extension=pdo_mysql.so' >> /etc/php5/cli/php.ini"
    sudo touch  /home/ubuntu/.phpenv/versions/5.3/etc/conf.d/50-phalcon.ini 
    sudo sh -c "echo 'extension=phalcon.so' >> /home/ubuntu/.phpenv/versions/5.3/etc/conf.d/50-phalcon.ini"
  
    #PHP Codeception
    sudo wget http://codeception.com/codecept.phar
    sudo chmod +x codecept.phar
    sudo mv codecept.phar /usr/local/bin/codecept

    ###################
    ## PHP 5.4
    ###################

    php-build -i development --pear 5.4.28 $HOME/.phpenv/versions/5.4 --verbose
    export PHPINI=/home/ubuntu/.phpenv/versions/5.4/etc/php.ini
    sed -i 's/128M/8096M/' $PHPINI

    # Setup environment
    phpenv rehash
    phpenv global 5.4
    phpenv rehash
    prefix=$(phpenv prefix)
    # list php version environment
    ls $prefix
    ls $prefix/pear
    # echo the current path
    echo $PATH
    # Download composer
    curl -sS https://getcomposer.org/installer | php
    sudo chmod +x ./composer.phar
    ./composer.phar selfupdate
    # Install composer
    sudo cp composer.phar $prefix/bin/composer
    sudo chmod +x $prefix/bin/composer
    # Install DBunit and DBunit
    wget https://phar.phpunit.de/phpunit.phar
    chmod +x phpunit.phar
    sudo cp phpunit.phar $prefix/bin/phpunit
    # Install atoum
    wget http://downloads.atoum.org/nightly/mageekguy.atoum.phar
    chmod +x mageekguy.atoum.phar
    sudo mv mageekguy.atoum.phar $prefix/bin/atoum
    sudo chmod +x $prefix/bin/atoum
    
    #install phalcon
    git clone --depth=1 git://github.com/phalcon/cphalcon.git
    cd cphalcon/ext;
    export CFLAGS="-g3 -O1 -fno-delete-null-pointer-checks -Wall";
    phpize && ./configure --enable-phalcon && make -j4 && sudo make install
    #cd cphalcon/build
    #sudo ./install
  
    # Configure PHP
    sudo sed -i 's+;date.timezone =+date.timezone = Europe/Rome +g'  $PHPINI

    sudo sed -i 's/disable_functions/;disable_functions/' $PHPINI
  
    #sudo sh -c "echo 'extension=pdo_mysql.so' >> /etc/php5/cli/php.ini"
    sudo touch  /home/ubuntu/.phpenv/versions/5.4/etc/conf.d/50-phalcon.ini 
    sudo sh -c "echo 'extension=phalcon.so' >> /home/ubuntu/.phpenv/versions/5.4/etc/conf.d/50-phalcon.ini"
  
    #PHP Codeception
    sudo wget http://codeception.com/codecept.phar
    sudo chmod +x codecept.phar
    sudo mv codecept.phar /usr/local/bin/codecept

    ###################
    ## PHP 5.5 
    ###################

    php-build -i development --pear 5.5.11 $HOME/.phpenv/versions/5.5 --verbose
    export PHPINI=/home/ubuntu/.phpenv/versions/5.5/etc/php.ini
    sed -i 's/128M/8096M/' $PHPINI

    # Setup environment
    phpenv rehash
    phpenv global 5.5
    phpenv rehash
    prefix=$(phpenv prefix)
    # list php version environment
    ls $prefix
    ls $prefix/pear
    # echo the current path
    echo $PATH
    # Download composer
    curl -sS https://getcomposer.org/installer | php
    sudo chmod +x ./composer.phar
    ./composer.phar selfupdate
    # Install composer
    sudo cp composer.phar $prefix/bin/composer
    sudo chmod +x $prefix/bin/composer
    # Install DBunit and DBunit
    wget https://phar.phpunit.de/phpunit.phar
    chmod +x phpunit.phar
    sudo cp phpunit.phar $prefix/bin/phpunit
    # Install atoum
    wget http://downloads.atoum.org/nightly/mageekguy.atoum.phar
    chmod +x mageekguy.atoum.phar
    sudo mv mageekguy.atoum.phar $prefix/bin/atoum
    sudo chmod +x $prefix/bin/atoum
    
    #install phalcon
    git clone --depth=1 git://github.com/phalcon/cphalcon.git
    cd cphalcon/ext;
    export CFLAGS="-g3 -O1 -fno-delete-null-pointer-checks -Wall";
    phpize && ./configure --enable-phalcon && make -j4 && sudo make install
    #cd cphalcon/build
    #sudo ./install
  
    # Configure PHP
    sudo sed -i 's+;date.timezone =+date.timezone = Europe/Rome +g'  $PHPINI

    sudo sed -i 's/disable_functions/;disable_functions/' $PHPINI
  
    #sudo sh -c "echo 'extension=pdo_mysql.so' >> /etc/php5/cli/php.ini"
    sudo touch  /home/ubuntu/.phpenv/versions/5.5/etc/conf.d/50-phalcon.ini 
    sudo sh -c "echo 'extension=phalcon.so' >> /home/ubuntu/.phpenv/versions/5.5/etc/conf.d/50-phalcon.ini"
  
    #PHP Codeception
    sudo wget http://codeception.com/codecept.phar
    sudo chmod +x codecept.phar
    sudo mv codecept.phar /usr/local/bin/codecept
    
default-build:
  php-composer-phpunit:
    priority: 150
    detect:
      - files:
          - composer.json
          - phpunit.xml
    text-to-append: |
      build:
          # The steps that will be executed on build
          steps:
            # A custom script step, name value is used in the UI
            # and the code value contains the command that get executed
            - script:
                name: install dependencies
                code: composer install --no-interaction --prefer-source
            - script:
                name: run unit tests
                code: phpunit
            # Add more steps here:
            #- script:
            #    name: run unit tests
            #    code: phpunit

  php-phpunit:
    priority: 125
    detect:
      - files:
        - phpunit.xml
    text-to-append: |
      build:
          # The steps that will be executed on build
          steps:
            # A custom script step, name value is used in the UI
            # and the code value contains the command that get executed
            #- script:
            #    name: install dependencies
            #    code: composer install --no-interaction
            - script:
                name: run unit tests
                code: phpunit
            # Add more steps here:
            #- script:
            #    name: run unit tests
            #    code: phpunit
  php-composer:
    priority: 100
    detect:
      - files:
          - composer.json
    text-to-append: |
      build:
          # The steps that will be executed on build
          steps:
            # A custom script step, name value is used in the UI
            # and the code value contains the command that get executed
            - script:
                name: install dependencies
                code: composer install --no-interaction
            - script:
                name: echo php information
                code: |
                  echo "php version $(php --version) running"
                  echo "from location $(which php)"
            # Add more steps here:
            #- script:
            #    name: run unit tests
            #    code: phpunit
  php:
    priority : 50
    detect:
      - default: true
    text-to-append: |
      # Build definition
      build:
        # The steps that will be executed on build
        steps:
          # A custom script step, name value is used in the UI
          # and the code value contains the command that get executed
          - script:
              name: echo php information
              code: |
                echo "php version $(php --version) running"
                echo "from location $(which php)"
          # Add more steps here:
          #- script:
          #    name: run unit tests
          #    code: phpunit

box-detect:
  priority: 1200
  version:
  detect:
    - files:
      - composer.json
    - files:
      - phpunit.xml
    - files:
      - index.php
